name: Release

on:
  push:
    tags:
      - 'v*' # Spustí se při pushnutí tagu, který začíná na 'v'

jobs:
  build_and_release:
    timeout-minutes: 30
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # SHA: 2b2e6c4b0e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable # SHA: c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3

      - name: Build for release
        run: cargo build --release --verbose

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1 # SHA: e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Automated release notes generated by GitHub.
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1 # SHA: f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/rtp-midi
          asset_name: rtp-midi-${{ github.ref }}-${{ runner.os }}
          asset_content_type: application/octet-stream

      - name: Upload dependency graph
        uses: actions/upload-release-asset@v1 # SHA: f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./docs/dep-graph.txt
          asset_name: dep-graph-${{ github.ref }}.txt
          asset_content_type: text/plain
name: CI/CD

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  rust:
    name: Rust Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y pkg-config libssl-dev
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
      - name: Lint
        run: cargo fmt --all -- --check && cargo clippy --all-targets -- -D warnings
      - name: Build
        run: cargo build --workspace --all-targets
      - name: Test
        run: cargo test --workspace --all-targets
      - name: Upload Rust Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rust-binaries
          path: target/

  android:
    name: Android Build & Test
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: rust
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
      - name: Install Android NDK
        run: |
          yes | sdkmanager --licenses
          sdkmanager "ndk;25.2.9519653"
      - name: Make Gradle wrapper executable
        run: chmod +x gradlew
        working-directory: android_hub
      - name: Build Android App
        run: |
          if [ -f "../build_android.sh" ]; then
            echo "Rust build script found, building with native library"
            ./gradlew assembleDebug --no-daemon
          else
            echo "Rust build script not found, building without native library"
            ./gradlew assembleDebug --no-daemon -x buildRustLibrary
          fi
        working-directory: android_hub
      - name: Run Unit Tests
        run: |
          if [ -f "../build_android.sh" ]; then
            echo "Rust build script found, running tests with native library"
            ./gradlew testDebugUnitTest --no-daemon
          else
            echo "Rust build script not found, running tests without native library"
            ./gradlew testDebugUnitTest --no-daemon -x buildRustLibrary
          fi
        working-directory: android_hub
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android_hub/app/build/outputs/apk/debug/*.apk
          if-no-files-found: warn

  esp32:
    name: ESP32 Firmware Build
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: rust
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install PlatformIO
        run: pip install platformio
      - name: Check ESP32 firmware directory
        run: |
          if [ ! -d "firmware/esp32_visualizer" ]; then
            echo "ESP32 firmware directory not found, skipping build"
            exit 0
          fi
      - name: Build ESP32 Firmware
        run: pio run
        working-directory: firmware/esp32_visualizer
      - name: Upload Firmware
        uses: actions/upload-artifact@v4
        with:
          name: esp32-firmware
          path: firmware/esp32_visualizer/.pio/build/*/*.bin
          if-no-files-found: warn